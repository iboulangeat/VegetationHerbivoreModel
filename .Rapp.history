library(rmarkdown)
library(knitr)
knit("Calibration.Rmd", "Calibration.md")
setwd("/Users/isabelleboulangeat/Documents/PROJETS/HIGH2")
setwd("/Users/isabelleboulangeat/Documents/PROJETS/HIGH2/Theorique-STM-Herbivores/_scripts_model4states")
library(rmarkdown)
library(knitr)
knit("Calibration.Rmd", "Calibration.md")
load("calibration.RData")
plot_impacts()
pdf(file = "../figs_article/supp_model_impacts.pdf", width = 6, height = 3.5)#
plot_impacts()#
dev.off()
setwd("/Users/isabelleboulangeat/Documents/PROJETS/HIGH2/Theorique-STM-Herbivores/_scripts_model4states")
pdf(file = "../figs_article/supp_model_impacts.pdf", width = 6, height = 3.5)#
plot_impacts()#
dev.off()
pdf(file = "../figs_article/supp_model_impacts.pdf", width = 6, height = 3.5)#
plot_impacts()#
dev.off()
pdf("../figs_article/supp_fitnesses.pdf", width = 9, height=4)#
plot_fitnesses()#
dev.off()
load("suppGradients.RData")#
#
pdf("../figs_article/suppGradients.pdf", width=10, height=15)#
plot_suppGradients()#
dev.off()
source("plots_article.r")
rm(list=ls())
source("plots_article.r")
load("suppGradients.RData")
pdf("../figs_article/supp_addGradients.pdf", width=10, height=15)
plot_suppGradients()
dev.off()
load("suppGradients.RData")
ls()
knit("suppGradients.Rmd", "suppGradients.md")
load("suppGradients.RData")
ls()
colos = c(1,"darkgreen","orange","blue", "red")
layout(matrix(1:8, nrow = 4, byrow = F), width = c(1,1), height=c(1,1,1,.3))
layout(matrix(1:8, nrow = 4, byrow = F), width = c(1,1), height=c(1,1,1,.3))
par(cex=1.2, mar=c(1,4,3,1))
plot.template(xlim = c(0,50), ylim = c(0,1), xticks = c(6,11), yticks = c(6,11), xlab = "", ylab = "Proportion of mature tree stands", col.bg = NA, col.grid = NA,plot.axis=FALSE)
plot.template(xlim = c(0,50), ylim = c(0,1), xticks = c(6,11), yticks = c(6,11), xlab = "", ylab = "Proportion of mature tree stands", col.bg = NA, col.grid = NA,plot.axis=FALSE)
axis(1, pos=0, at = seq(0,50,le=6), labels = temp.range, cex.axis=.9)
axis(2, pos = 0, at = seq(0,1,0.2), labels = seq(0,1,0.2))
forest = analysis.energy$newEq.all[,"T"] + analysis.energy$newEq.all[,"B"]
knit("suppGradients.Rmd", "suppGradients.md")
knit("Fisichelli.Rmd", "Fisichelli.md")
knit("MainAnalysis.Rmd", "Readme.md")
rm(list=ls())
knit("MixedFeeder.Rmd", "MixedFeeder.md")
par(cex=1.4, mar=c(1,4,3,1))
plot.template(xlim = c(0,50), ylim = c(0,1), xticks = c(6,11), yticks = c(6,11), xlab = "", ylab = "Proportion of mature tree stands", col.bg = NA, col.grid = NA,plot.axis=FALSE)
ls()
rm(list=ls())
knit("MixedFeeder.Rmd", "MixedFeeder.md")
plot.template(xlim = c(0,50), ylim = c(0,1), xticks = c(6,11), yticks = c(6,11), xlab = "", ylab = "Proportion of mature tree stands", col.bg = NA, col.grid = NA,plot.axis=FALSE)
par(cex=1.4, mar=c(1,4,3,1))
plot.template(xlim = c(0,50), ylim = c(0,1), xticks = c(6,11), yticks = c(6,11), xlab = "", ylab = "Proportion of mature tree stands", col.bg = NA, col.grid = NA,plot.axis=FALSE)
plot.template(xlim = c(0,50), ylim = c(0,1), xticks = c(6,11), yticks = c(6,11), xlab = "", ylab = "Proportion of mature tree stands", col.bg = NA, col.grid = NA,plot.axis=FALSE)
plot.template(xlim = c(0,50), ylim = c(0,1), xticks = c(6,11), yticks = c(6,11), xlab = "", ylab = "Proportion of mature tree stands", col.bg = NA, col.grid = NA,plot.axis=FALSE)
par(cex=1.4, mar=c(1,4,3,1))
par(mfrow=c(1,1))
par(cex=1.4, mar=c(1,4,3,1))
plot.template(xlim = c(0,50), ylim = c(0,1), xticks = c(6,11), yticks = c(6,11), xlab = "", ylab = "Proportion of mature tree stands", col.bg = NA, col.grid = NA,plot.axis=FALSE)
plot.template(xlim = c(0,50), ylim = c(0,1), xticks = c(6,11), yticks = c(6,11), xlab = "", ylab = "Proportion of mature tree stands", col.bg = NA, col.grid = NA,plot.axis=FALSE)
plot.template(xlim = c(0,50), ylim = c(0,1), xticks = c(6,11), yticks = c(6,11), xlab = "", ylab = "Proportion of mature tree stands", col.bg = NA, col.grid = NA,plot.axis=FALSE)
axis(1, pos=0, at = seq(0,50,le=6), labels = temp.range, cex.axis=.9)
axis(2, pos = 0, at = seq(0,1,0.2), labels = seq(0,1,0.2))
lines(newEq.all.For~gradient, col = 1, type = "l", lwd = 1.5)
lines(newEq.veg.For~gradient, col = 1, lwd = 1.5, lty = 2)
newEq.all.For
points(Hmax-1, newEq.all.For[which.max(newEq.all[,"H"])], pch=8)
points(B2T-1, newEq.all.For[which(dominance=="T") [1]], pch=19)
points(B2T.veg-1, newEq.veg.For[which(dominance.veg=="T") [1]], pch=1)
mtext("(a)", 3, font = 2, cex=1.5)
par(cex=1.4, mar=c(1,4,3,1))
plot.template(xlim = c(0,50), ylim = c(0,0.01), xlab = "", ylab = "Asymptotic resilience", xticks = c(6,11), yticks = c(6,11), col.bg = NA, col.grid = NA, plot.axis=FALSE)
plot.template(xlim = c(0,50), ylim = c(0,0.01), xlab = "", ylab = "Asymptotic resilience", xticks = c(6,11), yticks = c(6,11), col.bg = NA, col.grid = NA, plot.axis=FALSE)
plot.template(xlim = c(0,50), ylim = c(0,0.01), xlab = "", ylab = "Asymptotic resilience", xticks = c(6,11), yticks = c(6,11), col.bg = NA, col.grid = NA, plot.axis=FALSE)
axis(1, pos=0, at = seq(0,50,le=6), labels = temp.range, cex.axis=.9)
axis(2, pos = 0, at = seq(0,0.01,0.002), labels = seq(0,0.01,0.002))
lines(-lambdamax.all~gradient, col = 1, type = "l", lwd = 1.5)
points(Hmax-1, -lambdamax.all[which.max(newEq.all[,"H"])], pch=8)
points(O2B-1, -lambdamax.all[which(dominance=="B") [1]], pch=19)
points(B2T-1, -lambdamax.all[which(dominance=="T") [1]], pch=19)
points(Hmax-1, newEq.all.For[which.max(newEq.all[,"H"])], pch=8)
Hmax
par(cex=1.4, mar=c(1,4,3,1))#
  plot.template(xlim = c(0,50), ylim = c(0,1), xticks = c(6,11), yticks = c(6,11), xlab = "", ylab = "Proportion of mature tree stands", col.bg = NA, col.grid = NA,plot.axis=FALSE)#
  axis(1, pos=0, at = seq(0,50,le=6), labels = temp.range, cex.axis=.9)#
  axis(2, pos = 0, at = seq(0,1,0.2), labels = seq(0,1,0.2))#
  lines(newEq.all.For~gradient, col = 1, type = "l", lwd = 1.5)#
  lines(newEq.veg.For~gradient, col = 1, lwd = 1.5, lty = 2)#
  points(Hmax-1, newEq.all.For[which.max(newEq.all[,"H"])], pch=8)#
  points(O2B-1, newEq.all.For[which(dominance=="B") [1]], pch=19)#
  points(B2T-1, newEq.all.For[which(dominance=="T") [1]], pch=19)#
  points(B2T.veg-1, newEq.veg.For[which(dominance.veg=="T") [1]], pch=1)#
  mtext("(a)", 3, font = 2, cex=1.5)
par(cex=1.4, mar=c(1,4,3,1))
plot.template(xlim = c(0,50), ylim = c(0,0.01), xlab = "", ylab = "Asymptotic resilience", xticks = c(6,11), yticks = c(6,11), col.bg = NA, col.grid = NA, plot.axis=FALSE)
plot.template(xlim = c(0,50), ylim = c(0,0.01), xlab = "", ylab = "Asymptotic resilience", xticks = c(6,11), yticks = c(6,11), col.bg = NA, col.grid = NA, plot.axis=FALSE)
plot.template(xlim = c(0,50), ylim = c(0,0.01), xlab = "", ylab = "Asymptotic resilience", xticks = c(6,11), yticks = c(6,11), col.bg = NA, col.grid = NA, plot.axis=FALSE)
axis(1, pos=0, at = seq(0,50,le=6), labels = temp.range, cex.axis=.9)
axis(2, pos = 0, at = seq(0,0.01,0.002), labels = seq(0,0.01,0.002))
lines(-lambdamax.all~gradient, col = 1, type = "l", lwd = 1.5)
points(Hmax-1, -lambdamax.all[which.max(newEq.all[,"H"])], pch=8)
points(O2B-1, -lambdamax.all[which(dominance=="B") [1]], pch=19)
points(B2T-1, -lambdamax.all[which(dominance=="T") [1]], pch=19)
points(B2T.veg-1, -lambdamax.veg[which(dominance.veg=="T") [1]], pch=1)
lambdamax.all
lambdamax.veg
range(-lambdamax.veg)
range(-lambdamax.all)
lines(-lambdamax.all~gradient, col = 1, type = "l", lwd = 1.5)
lambdamax.all
lambdamax.veg
lines(-lambdamax.veg~gradient, col = 1, lwd = 1.5, lty = 2)
points(Hmax-1, -lambdamax.all[which.max(newEq.all[,"H"])], pch=8)
points(O2B-1, -lambdamax.all[which(dominance=="B") [1]], pch=19)
points(B2T-1, -lambdamax.all[which(dominance=="T") [1]], pch=19)
points(B2T.veg-1, -lambdamax.veg[which(dominance.veg=="T") [1]], pch=1)
par(cex=1.4, mar=c(1,4,3,1))
plot.template(xlim = c(0,50), ylim = c(-0.3,0), xlab = "", ylab = "Initial resilience", xticks = c(6,11), yticks = c(6,11), col.bg = NA, col.grid = NA, plot.axis=FALSE)
plot.template(xlim = c(0,50), ylim = c(-0.3,0), xlab = "", ylab = "Initial resilience", xticks = c(6,11), yticks = c(6,11), col.bg = NA, col.grid = NA, plot.axis=FALSE)
axis(2, pos = 0, at = seq(-0.3,0,0.05), labels = seq(-0.3,0,0.05))
lines(-reac.all~gradient, col = 1, type = "l", lwd = 1.5)
lines(-reac.veg~gradient, col = 1, lwd = 1.5, lty = 2)
points(Hmax-1, -reac.all[which.max(newEq.all[,"H"])], pch=8)
points(O2B-1, -reac.all[which(dominance=="B") [1]], pch=19)
points(B2T-1, -reac.all[which(dominance=="T") [1]], pch=19)
points(B2T.veg-1, -reac.veg[which(dominance.veg=="T") [1]], pch=1)
mtext("(c)", 3, font = 2, cex=1.5)
plot(1:10,1:10, ylab="", xlab="", xaxt="n", yaxt="n", type="n", bty="n")
mtext("Temperature", 1, line = -1.5, font = 2, col = 1, cex = 1.4)
par(cex=1.4, mar=c(1,4,3,1))
plot.template(xlim = c(0,50), ylim = c(0,0.15), xlab = "", ylab = "Exposure", xticks = c(6,11), yticks = c(6,11), col.bg = NA, col.grid = NA, plot.axis=FALSE)
plot.template(xlim = c(0,50), ylim = c(0,0.15), xlab = "", ylab = "Exposure", xticks = c(6,11), yticks = c(6,11), col.bg = NA, col.grid = NA, plot.axis=FALSE)
axis(2, pos = 0, at = seq(0,0.15,0.05), labels = seq(0,0.15,0.05))
lines(c(NA,deltaN.all)~gradient, col = 1, type = "l", lwd = 1.5)
lines(c(NA, deltaN.veg)~gradient, col = 1, lwd = 1.5, lty = 2)
knit("MixedFeeder.Rmd", "MixedFeeder.md")
knit("MixedFeeder.Rmd", "MixedFeeder.md")
knit("MixedFeeder.Rmd", "MixedFeeder.md")
knit("preference_pR.Rmd", "preference_pR.md")
knit("Calibration.Rmd", "Calibration.md")
knit("Calibration.Rmd", "Calibration.md")
knit("MixedFeeder.Rmd", "MixedFeeder.md")
knit("Sensitivity_analysis.Rmd", "Sensitivity_analysis.md")
rm(list=ls())
source("plots_article.r")
load("calibration.RData")
pdf(file = "../figs_article/supp_model_impacts.pdf", width = 6, height = 3.5)
plot_impacts()
dev.off()
setwd("/Users/isabelleboulangeat/Documents/PROJETS/HIGH2/_scripts_model4states")
load("calibration.RData")
ls()
load("Calibration.RData")
ls()
pdf(file = "../figs_article/supp_model_impacts.pdf", width = 6, height = 3.5)
plot_impacts()
dev.off()
pdf("../figs_article/supp_fitnesses.pdf", width = 9, height=4)
plot_fitnesses()
dev.off()
load("Sensitivity_analysis.RData")
load("Sensivity_analysis.RData")
pdf(file = "../figs_article/supp_SA_1.pdf")
plot_sa.a()
dev.off()
knit("Sensitivity_analysis.Rmd", "Sensitivity_analysis.md")
load("Sensivity_analysis.RData")
pdf(file = "../figs_article/supp_SA_1.pdf")
plot_sa.a()
dev.off()
pdf(file = "../figs_article/supp_SA_2.pdf")
plot_sa.b()
dev.off()
load("suppGradients.RData")
pdf("../figs_article/supp_addGradients.pdf", width=10, height=15)
plot_suppGradients()
dev.off()
load("Fisichelli.RData")
pdf(file="../figs_article/Fisichelli.pdf", height=6, width=12)
plot_fisichelli()
dev.off()
load("MainAnalysis.RData")
pdf(file="../figs_article/equilibrium.pdf", height=12, width=5)
plot_equilibrium()
dev.off()
pdf(file="../figs_article/allMetrics.pdf", height=15, width=10)
plot_transient()
dev.off()
pdf(file="../figs_article/correlations.pdf", height=9, width=15)
plot_correlations()
dev.off()
pdf(file="../figs_article/trajectories.pdf", height=4, width=12)
plot_trajectories()
dev.off()
source("plots_article.r")
pdf(file="../figs_article/correlations.pdf", height=9, width=15)
plot_correlations()
dev.off()
load("MixedFeeder.RData")
pdf(file="../figs_article/equilibrium_mf.pdf", height=12, width=5)
plot_equilibrium()
dev.off()
pdf(file="../figs_article/allMetrics_mf.pdf", height=15, width=10)
plot_transient(ylim.H=5)
dev.off()
pdf(file="../figs_article/equilibrium_mf.pdf", height=12, width=5)
plot_equilibrium(ylim.H=5)
dev.off()
pdf(file="../figs_article/allMetrics_mf.pdf", height=15, width=10)
plot_transient()
dev.off()
load("preference_pR.RData")
knit("preference_pR.Rmd", "preference_pR.md")
pdf("../figs_article/allMetrics_pR.pdf", width=10, height=15)
plot_transient()
dev.off()
pdf("../figs_article/correlations_pR.pdf", width = 15, height=9)
plot_correlations_pR()
dev.off()
load("MixedFeeder.RData")#
#
pdf(file="../figs_article/equilibrium_mf.pdf", height=12, width=5)#
plot_equilibrium_mf(ylim.H=5)#
dev.off()
source("plots_article.r")
pdf(file="../figs_article/equilibrium_mf.pdf", height=12, width=5)#
plot_equilibrium_mf(ylim.H=5)#
dev.off()
pdf(file="../figs_article/equilibrium_mf.pdf", height=5, width=12)#
plot_equilibrium_mf(ylim.H=5)#
dev.off()
pdf(file="../figs_article/equilibrium_mf.pdf", height=4, width=12)#
plot_equilibrium_mf(ylim.H=5)#
dev.off()
knit("MixedFeeder.Rmd", "MixedFeeder.md")
source("plots_article.r")
rm(list=ls())#
source("plots_article.r")
load("MixedFeeder100.RData")
pdf(file="../figs_article/equilibrium_mf100.pdf", height=4, width=12)
plot_equilibrium_mf(ylim.H=5)
dev.off()
pdf(file="../figs_article/allMetrics_mf100.pdf", height=15, width=10)
plot_transient()
dev.off()
